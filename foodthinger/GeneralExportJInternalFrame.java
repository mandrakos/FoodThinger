/*
 * ExportJInternalFrame.java
 *
 * Created on July 24, 2006, 9:10 PM
 */

package foodthinger;

import javax.swing.JCheckBox;
import java.io.File;

/**
 *
 * @author  RC Stanley
 */
public class GeneralExportJInternalFrame extends javax.swing.JDialog
{
    File exportFile=null;
    FoodModel fm;
    javax.swing.JTable table;
    String title;
    javax.swing.JCheckBox boxes[];
    /** Creates new form ExportJInternalFrame */
    public GeneralExportJInternalFrame(java.awt.Frame parent, boolean modal, FoodModel fm,javax.swing.JTable table,String title)
    {
	super(parent, modal);
	this.fm = fm;
	this.table = table;
	this.title = title;
	this. boxes = new javax.swing.JCheckBox[table.getColumnCount()];
	initComponents();
    }
    
     
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        jPanelOptions = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabelDelim = new javax.swing.JLabel();
        jTextFieldDelim = new javax.swing.JTextField();
        jLabelFile = new javax.swing.JLabel();
        jCheckBoxHeaders = new javax.swing.JCheckBox();
        Format = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridLayout(3, 1));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Export Pantry Information");
        jPanelOptions.setLayout(new java.awt.GridLayout(5, 2));

        jPanelOptions.setBorder(new javax.swing.border.TitledBorder("Export"));
        jPanelOptions.setName("Export");

        for(int i = 0; i < table.getColumnCount();i++)
        {
            boxes[i] = new JCheckBox(table.getColumnName(i),true);
            this.jPanelOptions.add(boxes[i],i);
        }
        getContentPane().add(jPanelOptions);

        jLabelDelim.setLabelFor(jTextFieldDelim);
        jLabelDelim.setText("Delimiter:");
        jLabelDelim.setToolTipText("Character to Sepparate the fields in the file");
        jPanel1.add(jLabelDelim);

        jTextFieldDelim.setText("^");
        jPanel1.add(jTextFieldDelim);

        jPanel1.add(jLabelFile);

        jCheckBoxHeaders.setSelected(true);
        jCheckBoxHeaders.setText("Include Column Names");
        jCheckBoxHeaders.setToolTipText("Include the column headers");
        jPanel1.add(jCheckBoxHeaders);

        Format.setText("Format:");
        jPanel1.add(Format);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "html", "csv" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jComboBox1ActionPerformed(evt);
            }
        });

        jPanel1.add(jComboBox1);

        getContentPane().add(jPanel1);

        jButton1.setText("Export");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                browseForExportFile(evt);
            }
        });

        jPanel2.add(jButton1);

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cancelButton(evt);
            }
        });

        jPanel2.add(jButton2);

        getContentPane().add(jPanel2);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jComboBox1ActionPerformed
    {//GEN-HEADEREND:event_jComboBox1ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void cancelButton(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButton
    {//GEN-HEADEREND:event_cancelButton
	try
	{
	    this.dispose();
	}
	catch (Exception e)
	{
	    System.out.println(e);
	}
    }//GEN-LAST:event_cancelButton

    public void writeLine(int i, java.io.FileWriter out) throws java.io.IOException
    {
	    boolean first = true;
	    for(int j=0; j<table.getColumnCount();j++)
	    {
		//if the user wants it written out
		if(this.boxes[j].isSelected())
		{
		    if(first) //if this is the first item in the row, mark that it is
		    {
			first = false;
		    }
		    else //put the delimiter in front
		    {
			out.write(this.jTextFieldDelim.getText());
		    }
		    //if the data is not null write it out
		    if(table.getValueAt(i, j) != null)
		    {
			out.write(table.getValueAt(i, j).toString());
		    }
		    
		}
		
	    }
	 //put carriage return
	out.write("\r\n");
    }
    
    protected String createHtmlFile()
    {
	String html = "<html><head><title>"+title+"</title></head>\r\n";
	html+="<body><h2>"+title+"</h2><br>\r\n";
	html+="<h3>As of "+(new java.util.Date()).toString()+"</h3><br>\r\n";
	//do the table
	html+="<table>";
	if(this.jCheckBoxHeaders.isSelected())
	{
	    html+="<thead><tr>";
	    //get the table header
	    for(int i=0;i<table.getColumnCount();i++)
	    {
		if(this.boxes[i].isSelected())
		{
		    html+="<td>"+table.getColumnName(i)+"</td>";
		}
	    }
	    html+="</tr></thead>";
	}
	html+="<tbody>";
	//get the table body
	for(int i =0; i<table.getRowCount();i++)
	{
	    html+="<tr>";
	    for(int j =0;j<table.getColumnCount();j++)
	    {
		if(this.boxes[j].isSelected())
		{
		    html+="<td>"+table.getValueAt(i,j)+"</td>";
		}
	    }
	    html+="</tr>\r\n";
	}
	html+="</tdbody></table></body></html>";
	return html;
    }
    
    public void writeHeader(java.io.FileWriter out) throws java.io.IOException
    {
	    boolean first = true;
	    for(int j=0; j<table.getColumnCount();j++)
	    {
		//if the user wants it written out
		if(this.boxes[j].isSelected())
		{
		    if(first) //if this is the first item in the row, mark that it is
		    {
			first = false;
		    }
		    else //put the delimiter in front
		    {
			out.write(this.jTextFieldDelim.getText());
		    }
		    //if the data is not null write it out
		    if(table.getColumnName(j) != null)
		    {
			out.write(table.getColumnName(j));
		    }
		    
		}
		
	    }
	 //put carriage return
	out.write("\r\n");
    }
    /**
     * writes the strings to the export file
     */
 public void writeFile(File file, javax.swing.JTable data) throws java.io.IOException
 {
     //open the file
	//write the file
	java.io.FileWriter out = new java.io.FileWriter(exportFile);
	//write the headers
	if(this.jCheckBoxHeaders.isSelected())
	{
	    writeHeader(out);
	}
	boolean first = true;
	//for each row
	for(int i=0; i<table.getRowCount();i++)
	{
	    writeLine(i, out);
	    
	}

    //close the file
	out.flush();
	out.close();
 }
 
    /**
     * writes the strings to the export file
     */
 public void writeFile(File file, String data) throws java.io.IOException
 {
     //open the file
	//write the file
	java.io.FileWriter out = new java.io.FileWriter(exportFile);
	//write the headers
	out.write(data);

    //close the file
	out.flush();
	out.close();
 }
    
 /**
 * allows the user to browse for the file to export to
 * then does the export.  Closes window when finished.
 */
    private void browseForExportFile(java.awt.event.ActionEvent evt)//GEN-FIRST:event_browseForExportFile
    {//GEN-HEADEREND:event_browseForExportFile
	//get the new file
	javax.swing.JFileChooser fc = new javax.swing.JFileChooser();
	String error="";
	if(exportFile!=null)
	{
	    fc.setSelectedFile(exportFile);
	}
	int returnval = fc.showSaveDialog(this);
	if(returnval == fc.APPROVE_OPTION)
	{
	   
	    exportFile = fc.getSelectedFile();
	    if(exportFile == null) return;
	    //open the file, get the info, and save it
	    //get the info from the db
	    //String[][] table = fm.getFoodTable(Constants.FOOD_STORED_TABLE_QUERY, this.jCheckBoxCommon.isSelected());
	    if(table==null || table.getColumnCount()==0||table.getRowCount()==0)
	    {
		javax.swing.JOptionPane.showMessageDialog(this,"Could not export information:"+error,"Could not export information",javax.swing.JOptionPane.ERROR_MESSAGE);
	    }
	    try
	    {
		if(exportFile.exists())
		{
		    int overwrite = javax.swing.JOptionPane.showConfirmDialog(this,"File "+exportFile + " already exists.  Do you want to Overwrite?");
		    if(overwrite != javax.swing.JOptionPane.YES_OPTION) return;
		}
    		if(this.jComboBox1.getSelectedIndex()==0)//html
		{
		    String file = createHtmlFile();
		    writeFile(exportFile, file);
		}
		else if(this.jComboBox1.getSelectedIndex()==1)//csv
		{
		    writeFile(exportFile,table);
		}
		
	   	
	    }
	    catch(Exception e)
	    {
		javax.swing.JOptionPane.showMessageDialog(this,"Could not export information:"+e.toString(),"Could not export information",javax.swing.JOptionPane.ERROR_MESSAGE);
	    }
	    if(error.length() > 0) //error, warn couldn't save
	    {
		javax.swing.JOptionPane.showMessageDialog(this,"Could not export information:"+error,"Could not export information",javax.swing.JOptionPane.ERROR_MESSAGE);
	    }
	    else //no errors, close window
	    {
		try
		{
		    this.dispose();
		}
		catch (Exception e)
		{
		    System.out.println(e);
		}
	    }
	}
	
	
    }//GEN-LAST:event_browseForExportFile
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Format;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBoxHeaders;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabelDelim;
    private javax.swing.JLabel jLabelFile;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelOptions;
    private javax.swing.JTextField jTextFieldDelim;
    // End of variables declaration//GEN-END:variables
    
}
