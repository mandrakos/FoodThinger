/*
 * ConverterJInternalFrame.java
 *
 * Created on October 12, 2006, 8:18 PM
 */

package foodthinger;

/**
 *
 * @author  RC Stanley
 */
public class ConverterJInternalFrame extends javax.swing.JInternalFrame
{
    FoodModel fm;
    javax.swing.DefaultComboBoxModel comboModel;
    java.util.TreeSet set;
    /** Creates new form ConverterJInternalFrame */
    public ConverterJInternalFrame(FoodModel fm)
    {
	this.fm = fm;
	set = new java.util.TreeSet();
	initComponents();
	createComboModels();
    }
    
    public void createComboModels()
    {
	String[][]results = fm.getStringsFromQuery(Constants.CONVERSION_QUERY,null,new int[]{0,1,2});
	Conversion c;
	Conversion c2;
	ConversionFactor f;
	for(int i = 0; i < results.length;i++)
	{
	    c = new Conversion(Integer.parseInt(results[i][0]), (String)fm.idToAmount.get(results[i][0]));
	    //get the right object
	    if(set.contains(c))
	    {
		java.util.Iterator it= set.iterator();
		while(it.hasNext())
		{
		    c2 = (Conversion)it.next();
		    if(c2.equals(c))
		    {
			c = c2;
			break;
		    }
		}
	    }
	    else
	    {
		set.add(c);
	    }
	    f = new ConversionFactor(Integer.parseInt(results[i][1]), (String)fm.idToAmount.get(results[i][1]),Float.parseFloat(results[i][2]));
	    c.addFactor(f);
	}
	this.comboModel = new javax.swing.DefaultComboBoxModel(set.toArray());
	this.jComboBoxStart.setModel(comboModel);
	Object o = this.jComboBoxStart.getSelectedItem();
	this.jComboBoxEnd.setModel(((Conversion)o).getComboBox());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jComboBoxStart = new javax.swing.JComboBox();
        jFormattedTextFieldStart = new javax.swing.JFormattedTextField();
        jComboBoxEnd = new javax.swing.JComboBox();
        jLabelEnd = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButtonConvert = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setResizable(true);
        setTitle("Convert Units");
        addComponentListener(new java.awt.event.ComponentAdapter()
        {
            public void componentShown(java.awt.event.ComponentEvent evt)
            {
                windowShown(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                ConverterJInternalFrame.this.focusGained(evt);
            }
        });

        jComboBoxStart.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jComboBoxStartActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        getContentPane().add(jComboBoxStart, gridBagConstraints);

        jFormattedTextFieldStart.setPreferredSize(new java.awt.Dimension(30, 22));
        jFormattedTextFieldStart.setValue(new Float(0.0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        getContentPane().add(jFormattedTextFieldStart, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        getContentPane().add(jComboBoxEnd, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        getContentPane().add(jLabelEnd, gridBagConstraints);

        jButtonConvert.setText("Convert");
        jButtonConvert.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonConvertActionPerformed(evt);
            }
        });

        jPanel1.add(jButtonConvert);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        getContentPane().add(jPanel1, gridBagConstraints);

        jLabel1.setText("in");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        getContentPane().add(jLabel1, gridBagConstraints);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void focusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_focusGained
    {//GEN-HEADEREND:event_focusGained
	createComboModels();
    }//GEN-LAST:event_focusGained

    private void windowShown(java.awt.event.ComponentEvent evt)//GEN-FIRST:event_windowShown
    {//GEN-HEADEREND:event_windowShown
	createComboModels();
    }//GEN-LAST:event_windowShown

    private void jComboBoxStartActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jComboBoxStartActionPerformed
    {//GEN-HEADEREND:event_jComboBoxStartActionPerformed
	//take what is selected and update the other combo box
	Object o = this.jComboBoxStart.getSelectedItem();
	this.jComboBoxEnd.setModel(((Conversion)o).getComboBox());
    }//GEN-LAST:event_jComboBoxStartActionPerformed

    private void jButtonConvertActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonConvertActionPerformed
    {//GEN-HEADEREND:event_jButtonConvertActionPerformed
	//get the value from the field
	float value = ((Float)this.jFormattedTextFieldStart.getValue()).floatValue();
	//get the selected ending units
	ConversionFactor cf = (ConversionFactor) this.jComboBoxEnd.getSelectedItem();
	if(cf!=null)
	{
	    float answer = value * cf.getFactor();
	    //put results in text field
	    this.jLabelEnd.setText(answer + " "+ cf.getName());
	}
	
	
    }//GEN-LAST:event_jButtonConvertActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConvert;
    private javax.swing.JComboBox jComboBoxEnd;
    private javax.swing.JComboBox jComboBoxStart;
    private javax.swing.JFormattedTextField jFormattedTextFieldStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelEnd;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
    
}

class Conversion implements java.lang.Comparable
{
    int startId;
    String name;
    java.util.TreeSet set;
    
    Conversion(int startId, String name)
    {
	this.startId = startId;
	this.name = name;
	set = new java.util.TreeSet();
    }
    
    public void addFactor(ConversionFactor f)
    {
	if(!set.contains(f))
	{
	    set.add(f);
	}
    }
    
    public javax.swing.DefaultComboBoxModel getComboBox()
    {
	return new javax.swing.DefaultComboBoxModel(set.toArray());
    }
    
    public String toString()
    {
	return name;
    }
    
    public int getId()
    {
	return startId;
    }
    
    public String getName()
    {
	return name;
    }
    
    public int compareTo(Object o)
    {
	if(o instanceof Conversion)
	{
	    if(this.equals(o)) return 0;
	    String tempId = ((Conversion)o).getName();
	    return name.compareTo(tempId);
	}
	return -1;
    }
    
    public boolean equals(Object o)
    {
	if(o instanceof Conversion)
	{
	    int tempId = ((Conversion)o).getId();
	    if(tempId==startId) return true;
	}
	return false;
    }
}

class ConversionFactor  implements java.lang.Comparable
{
    int endId;
    String endIdName;
    float factor;
    
    ConversionFactor(int endId, String endIdName, float factor)
    {
	this.endId = endId;
	this.endIdName = endIdName;
	this.factor = factor;
    }
    
    public String toString()
    {
	return endIdName;
    }
    
    public float getFactor()
    {
	return factor;
    }
    
    public int getId()
    {
	return this.endId;
    }
    
    public String getName()
    {
	return this.endIdName;
    }
    
     public int compareTo(Object o)
    {
	if(o instanceof ConversionFactor)
	{
	    String tempId = ((ConversionFactor)o).getName();
	    return endIdName.compareTo(tempId);
	}
	return -1;
    }
     
     public boolean equals(Object o)
    {
	if(o instanceof ConversionFactor)
	{
	    int tempId = ((ConversionFactor)o).getId();
	    if(tempId==endId) return true;
	}
	return false;
    }
}
